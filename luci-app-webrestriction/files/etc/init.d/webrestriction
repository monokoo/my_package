#!/bin/sh /etc/rc.common
#
# Copyright (C) 2015 OpenWrt-dist
# Copyright (C) 2016 fw867 <ffkykzs@gmail.com>
#
# This is free software, licensed under the GNU General Public License v3.
# See /LICENSE for more information.
#

START=99

CONFIG=webrestriction

uci_get_by_type() {
	local index=0
	if [ -n $4 ]; then
		index=$4
	fi
	local ret=$(uci get $CONFIG.@$1[$index].$2 2>/dev/null)
	echo ${ret:=$3}
}

is_true() {
	case $1 in
		1|on|true|yes|enabled) echo 0;;
		*) echo 1;;
	esac
}

load_config() {
	ENABLED=$(uci_get_by_type basic enable)
	return $(is_true $ENABLED)
}

add_rule(){
	local ss_enabled=0
	local kp_enabled=0
	action=$1
	[ "`iptables -t nat -L PREROUTING |grep SHADOWSOCKS 2>/dev/null |wc -l`" -gt 0 ] && ss_enabled=1
	[ "`iptables -t nat -L PREROUTING |grep KOOLPROXY 2>/dev/null |wc -l`" -gt 0 ] && kp_enabled=1
	for i in $(seq 0 100)
	do
		enable=$(uci_get_by_type macbind enable '' $i)
		macaddr=$(uci_get_by_type macbind macaddr '' $i)
		if [ -z $enable ] || [ -z $macaddr ]; then
			break
		fi
		if [ "$enable" == "1" ]; then
			iptables -t filter -A WEB_RESTRICTION -m mac --mac-source $macaddr -j $action
			if [ "$limit_type" == "blacklist" ]; then
				#禁止使用ss访问外网
				[ "$ss_enabled" -eq 1 ] && iptables -t mangle -I SHADOWSOCKS $((i+1)) -m mac --mac-source $macaddr -j RETURN
				[ "$kp_enabled" -eq 1 ] && [ -z "`iptables -t nat -L KOOLPROXY | grep -w RETURN | grep -w "$macaddr"`" ] && iptables -t nat -I KOOLPROXY $((i+1)) -m mac --mac-source $macaddr -j RETURN
			else
				[ "$ss_enabled" -eq 1 ] && iptables -t mangle -I SHADOWSOCKS $((i+1)) -m mac ! --mac-source $macaddr -j RETURN
				[ "$kp_enabled" -eq 1 ] && iptables -t nat -I KOOLPROXY $((i+1)) -m mac ! --mac-source $macaddr -j RETURN
			fi
			unset macaddr
			
		fi
	done
}

get_disrule(){
	macaddr=$1
	mode=$2
	distype=$3
	is_disrule=0
	index=`uci show $distype | grep "@acl_rule" |grep -w "$macaddr" |awk -F'.' '{print $2}'`
	[ -n "$index" ] && [ "`uci -q get $distype.$index.$mode`" == "disable" ] && is_disrule=1
}

del_rule(){
	type=$1
	if [ "$type" == "KOOLPROXY" ]; then
		iptables_name="nat"
	else
		iptables_name="mangle"
	fi
	blackMacAdd=$(iptables -t $iptables_name -L $type | grep -w RETURN | grep -w "MAC" | awk '{print $7}')
	whiteMacAdd=$(iptables -t $iptables_name -L $type | grep -w RETURN | grep -w "MAC !" | awk '{print $8}')
	[ -n "$blackMacAdd" ] && {
		for macaddrb in $blackMacAdd
		do
			if [ "$type" == "KOOLPROXY" ]; then
				get_disrule $macaddrb filter_mode koolproxy
			else
				get_disrule $macaddrb proxy_mode shadowsocks
			fi
			[ "$is_disrule" -eq 1 ] && continue
			iptables -t $iptables_name -D $type -m mac --mac-source $macaddrb -j RETURN
		done
	}
	[ -n "$whiteMacAdd" ] && {
		for macaddrw in $whiteMacAdd
		do
			iptables -t $iptables_name -D $type -m mac ! --mac-source $macaddrw -j RETURN
		done
	}
}

limit_type=$(uci -q get webrestriction.@basic[0].limit_type)

start(){
	
	! load_config && exit 0
	[ "`iptables -L FORWARD|grep -c WEB_RESTRICTION`" -gt 0 ] && exit 0;
	iptables -P FORWARD DROP
	iptables -t filter -N WEB_RESTRICTION
	if [ "$limit_type" == "blacklist" ]; then
		add_rule DROP		
	else
		add_rule ACCEPT
		iptables -t filter -A WEB_RESTRICTION -j DROP
	fi

	#获取FORWARD ACCEPT规则行号
	FA_INDEX=`iptables -t filter -L FORWARD|tail -n +3|sed -n -e '/^ACCEPT/='`
	if [ -n "$FA_INDEX" ]; then
			let FA_INDEX+=1
	fi
	#确保添加到FORWARD ACCEPT规则之后
	iptables -t filter -I FORWARD $FA_INDEX -m comment --comment "Rule For Control" -j WEB_RESTRICTION

}
stop(){
	[ "`iptables -t filter -L | grep -c WEB_RESTRICTION`" -gt 0 ] && {
		iptables -t filter -D FORWARD -m comment --comment "Rule For Control" -j WEB_RESTRICTION 2>/dev/null
		iptables -t filter -F WEB_RESTRICTION 2>/dev/null
		iptables -t filter -X WEB_RESTRICTION 2>/dev/null
		[ "`iptables -t nat -L PREROUTING |grep SHADOWSOCKS 2>/dev/null |wc -l`" -gt 0 ] && del_rule SHADOWSOCKS
		[ "`iptables -t nat -L PREROUTING |grep KOOLPROXY 2>/dev/null |wc -l`" -gt 0 ] && del_rule KOOLPROXY
	}
}
